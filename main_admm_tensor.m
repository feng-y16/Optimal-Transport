%%
% test for the rank of A
max_dim = 5;
for k=2:1:max_dim
    size = randperm(max_dim, k) + 1;
    rank(full(get_constraint_matrix_tensor(size))) - (sum(size) - k + 1)
end
%%
% random cost tensor with size [n1, n2, n3]
% b generated by a random tensor x with size [n1, n2, n3]
clear;
n1 = 500;
n2 = n1;
n3 = n1;
seed = 0;
rng(seed);
c = rand(n1, n2, n3); 
c = c / max(max(max(c)));
x = rand(n1, n2, n3);
b = ([reshape(sum(x, [2, 3]), [1, n1]), reshape(sum(x, [1, 3]), [1, n2]), reshape(sum(x, [1, 2]), [1, n3])])';
c_flatten = reshape(permute(c, [3, 2, 1]), [n1 * n2 * n3, 1]);
x_flatten = reshape(permute(x, [3, 2, 1]), [n1 * n2 * n3, 1]);
%%
% generate constraint matrix A
% can be time-consuming
tic
A = get_constraint_matrix_tensor([n1, n2, n3]);
time_A = toc;
%%
% use MOSEK
output1 = linprog_mosek_tensor(c_flatten, n1 * n2 * n3, A, b, 'interior point');
output1.x = permute(reshape(output1.x, [n3, n2, n1]), [3, 2, 1]);
output1.time = output1.time + time_A;
output1.total_time = output1.total_time + time_A;
sum(output1.x .* c, [1, 2, 3])
b2 = ([reshape(sum(output1.x, [2, 3]), [1, n1]), reshape(sum(output1.x, [1, 3]), [1, n2]), reshape(sum(output1.x, [1, 2]), [1, n3])])';
norm(b2 - b) / norm(b)
%%
% use ADMM
iter = 2000;
eps = 0;
output2 = admm_gpu_tensor(c, b, zeros(n1, n2, n3), 1e-7, iter, eps, 1e+3, 1.1, 1.2);
sum(output2.x .* c, [1, 2, 3])
b3 = ([reshape(sum(output2.x, [2, 3]), [1, n1]), reshape(sum(output2.x, [1, 3]), [1, n2]), reshape(sum(output2.x, [1, 2]), [1, n3])])';
norm(b3 - b) / norm(b)
output2.final_gap
%%
% plot
postfix = [num2str(n1) '_' num2str(n2) '_' num2str(n3) '_' num2str(iter) '_' num2str(seed)];
save_dir = 'results/admm/';
draw([output1, output2], 'time', "Random", [save_dir, 'Random_time', postfix]);